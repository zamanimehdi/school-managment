<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ds_inputnumber" targetNamespace="http://tempuri.org/ds_inputnumber.xsd" xmlns:mstns="http://tempuri.org/ds_inputnumber.xsd" xmlns="http://tempuri.org/ds_inputnumber.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="DataConnectionString (Settings)" PropertyReference="ApplicationSettings.Student.Properties.Settings.GlobalReference.Default.DataConnectionString" Provider="System.Data.OleDb">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="scoreTableAdapter" GeneratorDataComponentClassName="scoreTableAdapter" Name="score" UserDataComponentName="scoreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectName="student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="False" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     idstudent, lname + ' ' + name AS name
FROM         student
WHERE     (idclass = ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="idclass" DataSourceName="student" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idclass" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idclass" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idstudent" DataSetColumn="idstudent" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy4" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>DELETE FROM score
WHERE     (idtest = ?) AND (idstudent = ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param2" ColumnName="idstudent" DataSourceName="score" DataTypeServer="DbType.Double" DbType="Decimal" Direction="Input" ParameterName="idstudent" Precision="15" ProviderType="Double" Scale="0" Size="0" SourceColumn="idstudent" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy2" GeneratorSourceName="edit_or_insert" Modifier="Public" Name="edit_or_insert" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="edit_or_insert">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     COUNT(*) AS Expr1
FROM         score
WHERE     (idstudent = ?) AND (idtest = ?)
GROUP BY idstudent, idtest</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="Param1" ColumnName="idstudent" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="UInt64" Direction="Input" ParameterName="idstudent" Precision="0" ProviderType="UnsignedBigInt" Scale="0" Size="0" SourceColumn="idstudent" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param2" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>INSERT INTO score
                      (idtest, idstudent, score)
VALUES     (?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="Param2" ColumnName="idstudent" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="UInt64" Direction="Input" ParameterName="idstudent" Precision="0" ProviderType="UnsignedBigInt" Scale="0" Size="0" SourceColumn="idstudent" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param3" ColumnName="score" DataSourceName="score" DataTypeServer="DbType.Double" DbType="Decimal" Direction="Input" ParameterName="score" Precision="15" ProviderType="Double" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="recordcount" Modifier="Public" Name="recordcount" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy2" UserSourceName="recordcount">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     COUNT(student.idstudent) AS Expr1
FROM         (score RIGHT OUTER JOIN
                      student ON score.idstudent = student.idstudent)
WHERE     (student.idclass = ?) AND (score.idtest = ?) OR
                      (score.idtest IS NULL)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="idclass" DataSourceName="student" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idclass" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idclass" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param2" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy3" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>UPDATE    score
SET              score = ?
WHERE     (idtest = ?) AND (idstudent = ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="score" DataSourceName="score" DataTypeServer="DbType.Double" DbType="Decimal" Direction="Input" ParameterName="score" Precision="15" ProviderType="Double" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="Param2" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="Original_idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="Param3" ColumnName="idstudent" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="UInt64" Direction="Input" ParameterName="Original_idstudent" Precision="0" ProviderType="UnsignedBigInt" Scale="0" Size="0" SourceColumn="idstudent" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="DataConnectionString (Settings)" DbObjectName="score" DbObjectType="Table" GenerateShortCommands="True" GeneratorSourceName="getscore" MethodsParameterType="CLR" Modifier="Public" Name="getscore" QueryType="Scalar" ScalarCallRetval="System.Double, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="getscore">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="True">
                <CommandText>SELECT     score
FROM         score
WHERE     (idtest = ?) AND (idstudent = ?)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="True" AutogeneratedName="Param1" ColumnName="idtest" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="Int32" Direction="Input" ParameterName="idtest" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="idtest" SourceColumnNullMapping="False" SourceVersion="Current">
                  </Parameter>
                  <Parameter AllowDbNull="True" AutogeneratedName="Param2" ColumnName="idstudent" DataSourceName="score" DataTypeServer="DbType.Int32" DbType="UInt64" Direction="Input" ParameterName="idstudent" Precision="0" ProviderType="UnsignedBigInt" Scale="0" Size="0" SourceColumn="idstudent" SourceColumnNullMapping="False" SourceVersion="Current">
                  </Parameter>
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ds_inputnumber" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="ds_inputnumber" msprop:Generator_DataSetName="ds_inputnumber">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="score" msprop:Generator_UserTableName="score" msprop:Generator_RowDeletedName="scoreRowDeleted" msprop:Generator_RowChangedName="scoreRowChanged" msprop:Generator_RowClassName="scoreRow" msprop:Generator_RowChangingName="scoreRowChanging" msprop:Generator_RowEvArgName="scoreRowChangeEvent" msprop:Generator_RowEvHandlerName="scoreRowChangeEventHandler" msprop:Generator_TableClassName="scoreDataTable" msprop:Generator_TableVarName="tablescore" msprop:Generator_RowDeletingName="scoreRowDeleting" msprop:Generator_TablePropName="score">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idstudent" msprop:Generator_UserColumnName="idstudent" msprop:Generator_ColumnPropNameInRow="idstudent" msprop:Generator_ColumnVarNameInTable="columnidstudent" msprop:Generator_ColumnPropNameInTable="idstudentColumn" type="xs:unsignedLong" />
              <xs:element name="name" msdata:ReadOnly="true" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInTable="nameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="score" msprop:Generator_UserColumnName="score" msprop:Generator_ColumnVarNameInTable="columnscore" msprop:Generator_ColumnPropNameInRow="score" msprop:Generator_ColumnPropNameInTable="scoreColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:score" />
      <xs:field xpath="mstns:idstudent" />
    </xs:unique>
  </xs:element>
</xs:schema>